<?php

/**
 * @file
 * Add a semi-transparent overlay to a page
 */

/**
 * Implements hook_menu().
 */
function toggle_overlay_menu() {
  $items = array();

  $items['admin/config/development/overlay'] = array(
    'title' => 'Toggle Overlay',
    'description' => 'Configure Overlay Images',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('toggle_overlay_form'),
    'access arguments' => array('administrater toggle overlay settings'),
    'type' => MENU_NORMAL_ITEM,
  );

  $items['toggle_overlays'] = array(
    'title' => 'Overlay JSON Data',
    'page callback' => '_toggle_overlay_get_json',
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
  );

  return $items;
}

/**
 * Page Callback: Get Toggle Overlay JSON Data
 *
 * @see toggle_overlay_menu
 */
function _toggle_overlay_get_json() {
  $settings = variable_get('toggle_overlay_pages');

  for ($i = 1; $i <= count($settings); $i++) {
    $file = file_load( $settings[$i]['overlay'] );
    $settings[$i]['overlay'] = file_create_url($file->uri);
  }
  drupal_json_output($settings);
}

/**
 * Page Callback: Toggle overlay settings
 *
 * @see toggle_overlay_menu
 */
function toggle_overlay_form($form, &$form_state) {
  $settings = variable_get('toggle_overlay_pages');

  if (empty($form_state['storage']['number_pages'])) {
    if (is_array($settings) && count($settings) > 0) {
      $form_state['storage']['number_pages'] = count($settings);
    }
    else {
      $form_state['storage']['number_pages'] = 1;
    }
  }

  $form['toggle_overlay_pages'] = array(
    '#type' => 'container',
    '#tree' => TRUE,
    '#prefix' => '<div id="toggle_overlay_pages">',
    '#suffix' => '</div>',
  );

  if ($form_state['clicked_button']['#name'] == 'add_page') {
    $form_state['storage']['number_pages']++;
  }

  for ($i = 1; $i <= $form_state['storage']['number_pages']; $i++) {
    $form['toggle_overlay_pages'][$i] = array(
      '#type' => 'fieldset',
      '#tree' => TRUE,
    );

    $form['toggle_overlay_pages'][$i]['rel_path'] = array(
      '#title' => t('Path'),
      '#type' => 'textfield',
      '#description' => t('Path relative to the root. No leading slash needed.'),
      '#required' => TRUE,
    );

    $form['toggle_overlay_pages'][$i]['overlay'] = array(
      '#type' => 'managed_file',
      '#title' => t('Overlay Image'),
      '#description' => t('The image to overlay for this Path'),
      '#upload_location' => 'public://toggle_overlay/',
      '#required' => TRUE,
    );

    if (is_array($settings) && count($settings) >= $i) {
      $form['toggle_overlay_pages'][$i]['rel_path']['#default_value'] = $settings[$i]['rel_path'];
      $form['toggle_overlay_pages'][$i]['overlay']['#default_value'] = $settings[$i]['overlay'];
    }

    $form['toggle_overlay_pages'][$i]['remove_page'] = array(
      '#type' => 'button',
      '#name' => 'remove_page_' . $i,
      '#value' => t('Remove Page'),
      '#href' => '',
      '#ajax' => array(
        'callback' => 'toggle_overlay_ajax_remove_page',
        'wrapper' => 'toggle_overlay_pages',
      ),
      '#limit_validation_errors' => array(),
    );
  }

  $form['add_page'] = array(
    '#type' => 'button',
    '#name' => 'add_page',
    '#value' => t('Add A Page'),
    '#href' => '',
    '#ajax' => array(
      'callback' => 'toggle_overlay_ajax_add_page',
      'wrapper' => 'toggle_overlay_pages',
    ),
    '#limit_validation_errors' => array(),
  );

  return system_settings_form($form);
}

function toggle_overlay_ajax_remove_page($form, &$form_state) {
  $button_name = $form_state['clicked_button']['#name'];
  $row_id = substr( $button_name, 12 );

  // Remove the elements from $form['toggle_overlay_pages']
  for ($i = $row_id; $i < $form_state['storage']['number_pages']; $i++) {
    $form['toggle_overlay_pages'][$i] = $form['toggle_overlay_pages'][$i+1];
  }
  unset($form['toggle_overlay_pages'][$form_state['storage']['number_pages']]);

  // Remove the element from the variable
  $settings = variable_get('toggle_overlay_pages');
  for ($i = $row_id; $i < count($settings); $i++) {
    $settings[$i] = $settings[$i+1];
  }
  unset($settings[count($settings)]);

  // Store the variable
  variable_set('toggle_overlay_pages', $settings);

  // Decrease the number of pages
  $form_state['storage']['number_pages']--;

  return $form['toggle_overlay_pages'];
}

function toggle_overlay_ajax_add_page($form, &$form_state) {
  return $form['toggle_overlay_pages'];
}
